/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ejecutables;

import idea.Idea;
import idea.BloqueIdea;
import idea.IdeaKey;
import idea.ConversorStringAIdea;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Ariel AB
 */
public class JFIdea extends javax.swing.JFrame {

    private String stringAConvertir;
    IdeaKey key = new IdeaKey();
    Idea idea;
    List<BloqueIdea> bloques;
    BloqueIdea bloqueEncriptado;
    BloqueIdea bloquesDesencriptados;
    BloqueIdea blockToDecrypt;
    List<BloqueIdea> encryptedBlocks = new ArrayList<BloqueIdea>();

    ;

    
    public JFIdea() {
        initComponents();
        centraVentana();
        this.getContentPane().setBackground(Color.LIGHT_GRAY);

    }

    private void centraVentana() {
        //Obtiene el tamaño de la pantalla
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // Obtiene el tamaño de la ventana de la aplicación
        Dimension frameSize = getSize();

        // Se asegura que el tamaño de la ventana de la aplicación
        // no exceda el tamaño de la pantalla
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }

        // Centra la ventana de la aplicación sobre la pantalla
        setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }

    private void obtenerMensajeLlave() {
        stringAConvertir = JTMensaje.getText();
        jTextAreaEncriptado.setText("Texto a encriptar: " + stringAConvertir + "\n");

        key.setK(0, 0x050c);
        key.setK(1, 0x0a0b);
        key.setK(2, 0x00f0);
        key.setK(3, 0x0e00);
        key.setK(4, 0x0501);
        key.setK(5, 0x0103);
        key.setK(6, 0x010d);
        key.setK(7, 0x00cd);
        jTextAreaEncriptado.append("Llave:(en bloques Hex):\n" + key.toString() + "\n\n");
    }

    private void entradasIdea() {
        jTextAreaEncriptado.append("Bloques de entrada (Hexadecimal):\n");
        idea = new Idea(key);
        ConversorStringAIdea stringToIdeaBlockConverter = new ConversorStringAIdea();
        bloques = stringToIdeaBlockConverter.convert(stringAConvertir);
        for (BloqueIdea block : bloques) {
            jTextAreaEncriptado.append(block.toHexString() + "\n");
        }
    }

    private void encriptar() {
        jTextAreaEncriptado.append("Bloques encriptados (Hexadecimal):\n");

        for (BloqueIdea blockToEncrypt : bloques) {
            bloqueEncriptado = idea.encrypt(blockToEncrypt);

            encryptedBlocks.add(bloqueEncriptado);
            jTextAreaEncriptado.append(bloqueEncriptado.toHexString() + "\n");
        }

    }

    private void desencriptar() {
        jTextAreaDesencritpado.setText("Bloques desencriptados (Hexadecimal):\n");
        StringBuilder stringOutput = new StringBuilder();
        for (BloqueIdea blockToDecrypt : encryptedBlocks) {
            bloquesDesencriptados = idea.decrypt(blockToDecrypt);

            jTextAreaDesencritpado.append(bloquesDesencriptados.toHexString() + "\n");
            stringOutput.append(bloquesDesencriptados.getBitArray().toASCII());
        }

        jTextAreaDesencritpado.append("String Desencriptada: " + stringOutput.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        JBEncriptar = new javax.swing.JButton();
        JTMensaje = new javax.swing.JTextField();
        LabelMensaje = new javax.swing.JLabel();
        JBDesencriptar = new javax.swing.JButton();
        LabelMensaje1 = new javax.swing.JLabel();
        JTKey = new javax.swing.JTextField();
        scrollPaneEncriptado = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaEncriptado = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDesencritpado = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JBEncriptar.setText("Encriptar");
        JBEncriptar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBEncriptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBEncriptarActionPerformed(evt);
            }
        });

        JTMensaje.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JTMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTMensajeActionPerformed(evt);
            }
        });
        JTMensaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JTMensajeKeyTyped(evt);
            }
        });

        LabelMensaje.setText("Mensaje");

        JBDesencriptar.setText("Desencriptar");
        JBDesencriptar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JBDesencriptar.setEnabled(false);
        JBDesencriptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JBDesencriptarMouseClicked(evt);
            }
        });
        JBDesencriptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBDesencriptarActionPerformed(evt);
            }
        });

        LabelMensaje1.setText("Key(solo numeros)");

        JTKey.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JTKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTKeyActionPerformed(evt);
            }
        });

        jTextAreaEncriptado.setEditable(false);
        jTextAreaEncriptado.setColumns(20);
        jTextAreaEncriptado.setRows(5);
        jTextAreaEncriptado.setFocusable(false);
        jScrollPane1.setViewportView(jTextAreaEncriptado);

        scrollPaneEncriptado.add(jScrollPane1);

        jTextAreaDesencritpado.setColumns(20);
        jTextAreaDesencritpado.setRows(5);
        jScrollPane2.setViewportView(jTextAreaDesencritpado);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelMensaje)
                            .addComponent(LabelMensaje1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(scrollPaneEncriptado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(JTMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                        .addGap(64, 64, 64))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(JTKey, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(JBEncriptar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JBDesencriptar)
                        .addGap(112, 112, 112))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelMensaje)
                            .addComponent(JTMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelMensaje1)
                            .addComponent(JTKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPaneEncriptado, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBEncriptar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JBDesencriptar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBEncriptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBEncriptarActionPerformed
        obtenerMensajeLlave();
        entradasIdea();
        encriptar();
        JBDesencriptar.setEnabled(true);
    }//GEN-LAST:event_JBEncriptarActionPerformed

    private void JTMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTMensajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTMensajeActionPerformed

    private void JBDesencriptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBDesencriptarActionPerformed
        jTextAreaEncriptado.setEnabled(false);
        desencriptar();
    }//GEN-LAST:event_JBDesencriptarActionPerformed

    private void JBDesencriptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBDesencriptarMouseClicked

    }//GEN-LAST:event_JBDesencriptarMouseClicked

    private void JTKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTKeyActionPerformed

    private void JTMensajeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTMensajeKeyTyped
        if (JTMensaje.getText().length() > 7) {
            evt.consume();
        }
    }//GEN-LAST:event_JTMensajeKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFIdea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFIdea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFIdea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFIdea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JFIdea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBDesencriptar;
    private javax.swing.JButton JBEncriptar;
    private javax.swing.JTextField JTKey;
    private javax.swing.JTextField JTMensaje;
    private javax.swing.JLabel LabelMensaje;
    private javax.swing.JLabel LabelMensaje1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaDesencritpado;
    private javax.swing.JTextArea jTextAreaEncriptado;
    private java.awt.ScrollPane scrollPaneEncriptado;
    // End of variables declaration//GEN-END:variables
}
